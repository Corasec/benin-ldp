# Generated by Django 4.1.1 on 2024-12-01 15:00

from django.db import migrations, models
import django.db.models.deletion
from django.db.models import Q


def init_administrative_level_geo_segment(apps, schema_editor):
    AdministrativeLevel = apps.get_model('administrativelevels', 'AdministrativeLevel')
    GeoSegment = apps.get_model('administrativelevels', 'GeoSegment')
    queryset = AdministrativeLevel.objects.exclude(Q(latitude=None) | Q(longitude=None))
    objects_to_update = list()
    for administrative_level in queryset:
        geo_seg_obj = GeoSegment.objects.filter(
                models.Q(latitude_northwest__gte=administrative_level.latitude) &
                models.Q(latitude_southwest__lte=administrative_level.latitude) &
                models.Q(longitude_northwest__lte=administrative_level.longitude) &
                models.Q(longitude_northeast__gte=administrative_level.longitude)
            ).first()
        if geo_seg_obj is not None:
            administrative_level.geo_segment = geo_seg_obj
            objects_to_update.append(administrative_level)

    AdministrativeLevel.objects.bulk_update(objects_to_update, fields=['geo_segment'])

def init_administrative_level_geo_segment_reverse(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('administrativelevels', '0024_project_source_of_financing'),
    ]

    operations = [
        migrations.AddField(
            model_name='administrativelevel',
            name='geo_segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='administrativelevels.geosegment', verbose_name='Geo segment'),
        ),
        migrations.RunPython(init_administrative_level_geo_segment, init_administrative_level_geo_segment_reverse)
    ]
